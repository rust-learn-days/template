name: ðŸš€ Release

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  parse:
    runs-on: ubuntu-latest
    name: Parse ref
    outputs:
      version: ${{ steps.parse.outputs.version }}
    steps:
      - id: parse
        name: Parse ref
        run: echo "version=${GITHUB_REF##refs/tags/v}" >> ${GITHUB_OUTPUT}

  build:
    name: Build
    needs:
        - parse
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-13
          - target: aarch64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        env:
          RUST_CACHE_KEY_OS: rust-cache-${{ matrix.target }}
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install requirements
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Setup target
        run: |
          echo "CARGO=cross" >> ${GITHUB_ENV}
          echo "TARGET=${{ matrix.target }}" >> ${GITHUB_ENV}
          echo "CROSS_BUILD_OPTS=--quiet" >> ${GITHUB_ENV}
          echo "CROSS_CONTAINER_OPTS=--privileged --user `id -u`:`id -g` --pid=host -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v/run:/run --mount=type=bind,source=/tmp,destination=/tmp,bind-propagation=shared" >> ${GITHUB_ENV}

      - name: Release build cross
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: target=${{ matrix.target }} just cross-build-release
      - name: Release build
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: target=${{ matrix.target }} just build-release
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: output/${{ matrix.target }}/*.tar.gz

  release:
    name: Create Draft Release
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    needs:
      - parse
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Create artifacts directory
        run: mkdir -p artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}
      - name: Create release
        shell: bash
        run: |
          set -x
          VERSION=${{ needs.parse.outputs.version }}
          if [[ $VERSION == *"-alpha"* || $VERSION == *"-beta"* || $VERSION == *"-rc"* ]]; then
            gh release create "v$VERSION" artifacts/*/* --draft --title "$VERSION" --notes-file CHANGES.md
          else
            gh release create "v$VERSION" artifacts/*/* --title "$VERSION" --notes-file CHANGES.md
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: "v${{ needs.parse.outputs.version }}"
